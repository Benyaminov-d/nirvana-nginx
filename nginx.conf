# Simple reverse proxy for Nirvana ecosystem

user  nginx;
worker_processes  auto;


events {
	worker_connections  1024;
}


http {
	include       /etc/nginx/mime.types;
	default_type  application/octet-stream;

	sendfile        on;
	tcp_nopush      on;
	tcp_nodelay     on;
	keepalive_timeout  65s;

	gzip on;
	gzip_types text/plain text/css application/json application/javascript application/octet-stream image/svg+xml;
	gzip_min_length 1024;

	# --- Security: generic bot/scanner hardening ---
	# Rate limit zone (per IP)
	limit_req_zone $binary_remote_addr zone=req_per_ip:10m rate=10r/s;

	# Deny access to dotfiles except ACME challenge
	map $request_uri $deny_dotfiles {
		default 0;
		~^/\.well-known/acme-challenge/ 0;
		~^/\..+ 1;
	}

	map $http_upgrade $connection_upgrade {
		default upgrade;
		''      close;
	}

	# Docker DNS resolver settings
	resolver 127.0.0.11 valid=30s ipv6=off;
	resolver_timeout 5s;

	# Upstream servers (note: name resolution happens at startup or reload)
	upstream nirvana_backend_upstream {
		server nirvana_backend:8000 max_fails=3 fail_timeout=5s;
		zone upstream_backend 64k;
		keepalive 16;
	}

	upstream nirvana_website_upstream {
		server nirvana_website:80 max_fails=3 fail_timeout=5s;
		zone upstream_website 64k;
		keepalive 16;
	}

	upstream nirvana_app_upstream {
		server nirvana_app:80 max_fails=3 fail_timeout=5s;
		zone upstream_app 64k;
		keepalive 16;
	}

	upstream nirvana_admin_upstream {
		server nirvana_admin:80 max_fails=3 fail_timeout=5s;
		zone upstream_admin 64k;
		keepalive 16;
	}


	# HTTP server: serve ACME challenge and redirect everything else to HTTPS apex
	server {
		listen 80;
		server_name _;

		location ^~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
			try_files $uri =404;
		}

		location / {
			return 301 https://nirvana.bm$request_uri;
		}
	}

	# Redirect www → apex on HTTP
	server {
		listen 80;
		server_name www.nirvana.bm;
		# ACME challenge must be served on 80 for issuance
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
			try_files $uri =404;
		}
		# Redirect all other HTTP requests to apex HTTPS
		location / {
			return 301 https://nirvana.bm$request_uri;
		}
	}

	# HTTP redirects for subdomains
	server {
		listen 80;
		server_name app.nirvana.bm;
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
			try_files $uri =404;
		}
		location / {
			return 301 https://app.nirvana.bm$request_uri;
		}
	}

	server {
		listen 80;
		server_name admin.nirvana.bm;
		location ^~ /.well-known/acme-challenge/ {
			root /var/www/certbot;
			try_files $uri =404;
		}
		location / {
			return 301 https://admin.nirvana.bm$request_uri;
		}
	}

	# HTTPS server: Main website (public, no auth)
	server {
		listen 443 ssl;
		server_name nirvana.bm;
		http2 on;

		# Per-request DNS resolution via variables for proxy_pass
		set $nirvana_backend http://nirvana_backend:8000;
		set $nirvana_website http://nirvana_website:80;
		set $nirvana_app http://nirvana_app:80;
		set $nirvana_admin http://nirvana_admin:80;

		ssl_certificate /etc/letsencrypt/live/nirvana.bm/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/nirvana.bm/privkey.pem;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:10m;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;

		# Real IP headers
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $host;
		proxy_next_upstream error timeout http_502 http_503 http_504;

		# Static files served from frontend (PDF, CSS, images, etc.)
		location /static/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_website;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
			
			# Add CORS headers for static assets
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
		}
		
		# Optimized handling for audio files
		location ~* \.(mp3|m4a|ogg|wav)$ {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_website;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header Range $http_range;
			proxy_set_header If-Range $http_if_range;
			proxy_buffering off;
			proxy_read_timeout 600s;
			proxy_send_timeout 600s;
			send_timeout 600s;
			
			# Enhanced cross-origin headers for iOS
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
			add_header Access-Control-Allow-Headers "Range, If-Range, Accept, Origin";
			add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
			add_header Accept-Ranges bytes;
			
			# iOS Safari-friendly cache settings
			add_header Cache-Control "public, max-age=604800, no-transform";
			expires 7d;
		}

		# Handle images from EULA documents (fix for member-eula images)
		location /images/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_backend/static/html/member_eula/images/;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Frontend assets (fonts, bg, tokens.css)
		location /assets/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_website;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# SPA content
		location /spa/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_website;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Single API gateway to backend
		location ^~ /api/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			# Delegate access control to backend (it reads NIR_ALLOWED_ORIGINS)
			proxy_pass $nirvana_backend;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Everything else → website (no auth required)
		location / {
			limit_req zone=req_per_ip burst=20 nodelay;
			proxy_pass $nirvana_website;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Block common secret/backup patterns without logging (regex locations)
		location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|node_modules|backup|backups|logs|tmp|uploads|keys|secrets) {
			access_log off;
			return 444;
		}

		# Block PHP files outright
		location ~* \.php(\d+)?$ {
			access_log off;
			return 444;
		}
	}

	# HTTPS server: App subdomain (with basic auth)
	server {
		listen 443 ssl;
		server_name app.nirvana.bm;
		http2 on;

		# Per-request DNS resolution via variables for proxy_pass
		set $nirvana_backend http://nirvana_backend:8000;
		set $nirvana_website http://nirvana_website:80;
		set $nirvana_app http://nirvana_app:80;
		set $nirvana_admin http://nirvana_admin:80;

		ssl_certificate /etc/letsencrypt/live/nirvana.bm/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/nirvana.bm/privkey.pem;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:10m;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;

		# Real IP headers
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $host;
		proxy_next_upstream error timeout http_502 http_503 http_504;

		# Static files
		location /static/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_app;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}
		
		# Optimized handling for audio files (with auth)
		location ~* \.(mp3|m4a|ogg|wav)$ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_app;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header Range $http_range;
			proxy_set_header If-Range $http_if_range;
			proxy_buffering off;
			proxy_read_timeout 600s;
			proxy_send_timeout 600s;
			send_timeout 600s;
			
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
			add_header Accept-Ranges bytes;
			
			# Add cache control headers
			add_header Cache-Control "public, max-age=604800";
			expires 7d;
		}

		# Frontend assets
		location /assets/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_app;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# SPA content
		location /spa/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_app;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# API gateway to backend
		location ^~ /api/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_backend;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Everything else → app (with auth)
		location / {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_app;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Block common patterns
		location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|node_modules|backup|backups|logs|tmp|uploads|keys|secrets) {
			access_log off;
			return 444;
		}

		location ~* \.php(\d+)?$ {
			access_log off;
			return 444;
		}
	}

	# HTTPS server: Admin subdomain (with basic auth)
	server {
		listen 443 ssl;
		server_name admin.nirvana.bm;
		http2 on;

		# Per-request DNS resolution via variables for proxy_pass
		set $nirvana_backend http://nirvana_backend:8000;
		set $nirvana_website http://nirvana_website:80;
		set $nirvana_app http://nirvana_app:80;
		set $nirvana_admin http://nirvana_admin:80;

		ssl_certificate /etc/letsencrypt/live/nirvana.bm/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/nirvana.bm/privkey.pem;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:10m;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;

		# Real IP headers
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Host $host;
		proxy_next_upstream error timeout http_502 http_503 http_504;

		# Static files
		location /static/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_admin;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Frontend assets
		location /assets/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_admin;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# SPA content
		location /spa/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_admin;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Export: Special handling for admin export functionality
		location = /export {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_admin;
			proxy_http_version 1.1;
		}
		location ^~ /export/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			rewrite ^/export/(.*)$ /api/export/$1 break;
			proxy_pass $nirvana_backend;
			proxy_http_version 1.1;
			proxy_read_timeout 600s;
			proxy_send_timeout 600s;
			send_timeout 600s;
		}

		# API gateway to backend
		location ^~ /api/ {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_backend;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Everything else → admin (with auth)
		location / {
			limit_req zone=req_per_ip burst=20 nodelay;
			auth_basic "Restricted";
			auth_basic_user_file /etc/nginx/.htpasswd;
			proxy_pass $nirvana_admin;
			proxy_http_version 1.1;
			proxy_read_timeout 300s;
			proxy_send_timeout 300s;
			send_timeout 300s;
		}

		# Block common patterns
		location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|node_modules|backup|backups|logs|tmp|uploads|keys|secrets) {
			access_log off;
			return 444;
		}

		location ~* \.php(\d+)?$ {
			access_log off;
			return 444;
		}
	}

	# HTTPS redirect: www → apex
	server {
		listen 443 ssl;
		server_name www.nirvana.bm;
		http2 on;

		ssl_certificate /etc/letsencrypt/live/nirvana.bm/fullchain.pem;
		ssl_certificate_key /etc/letsencrypt/live/nirvana.bm/privkey.pem;
		ssl_session_timeout 1d;
		ssl_session_cache shared:SSL:10m;
		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers HIGH:!aNULL:!MD5;

		return 301 https://nirvana.bm$request_uri;
	}
}