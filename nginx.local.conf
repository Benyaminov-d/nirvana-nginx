# Local development Nginx (no TLS). Proxies to different services

user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65s;

    gzip on;
    gzip_types text/plain text/css application/json application/javascript application/octet-stream image/svg+xml;
    gzip_min_length 1024;

    # Use Docker's embedded DNS for on-request name resolution (so optional apps don't break startup)
    resolver 127.0.0.11 valid=30s ipv6=off;

    # --- Security: generic bot/scanner hardening (dev parity) ---
    limit_req_zone $binary_remote_addr zone=req_per_ip:10m rate=10r/s;
    map $request_uri $deny_dotfiles {
        default 0;
        ~^/\.well-known/acme-challenge/ 0;
        ~^/\..+ 1;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream nirvana_backend_upstream {
        server nirvana_backend:8000;
    }
    # Remove static upstreams for dev app/admin/website to avoid resolution at startup

    # Main website - localhost (no auth)
    server {
        listen 80 default_server;
        server_name localhost 127.0.0.1 _;

        # Dynamic upstream for website dev server (optional)
        set $website_upstream http://nirvana_website_dev:5173;

        # Real IP headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # API gateway to backend
        location ^~ /api/ {
            proxy_pass http://nirvana_backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Static files from website
        location /static/ {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
            
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        }
        
        # Optimized handling for audio files
        location ~* \.(mp3|m4a|ogg|wav)$ {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Range $http_range;
            proxy_set_header If-Range $http_if_range;
            proxy_buffering off;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            send_timeout 600s;
            
            # Enhanced cross-origin headers for iOS
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Range, If-Range, Accept, Origin";
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
            add_header Accept-Ranges bytes;
            
            # iOS Safari-friendly cache settings
            add_header Cache-Control "public, max-age=604800, no-transform";
            expires 7d;
        }

        # Handle images from EULA documents
        location /images/ {
            proxy_pass http://nirvana_backend_upstream/static/html/member_eula/images/;
            proxy_http_version 1.1;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Assets from website
        location /assets/ {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # SPA content from website
        location /spa/ {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Vite dev server internals for website
        location ^~ /node_modules/ {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@vite {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@react-refresh {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Everything else to website (no auth in dev)
        location / {
            proxy_pass $website_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Block common sensitive patterns
        location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|backup|backups|logs|tmp|uploads|keys|secrets) {
            access_log off;
            return 444;
        }

        # Block PHP
        location ~* \.php(\d+)?$ {
            access_log off;
            return 444;
        }
    }

    # App subdomain - app.localhost (with auth)
    server {
        listen 80;
        server_name app.localhost;

        # Dynamic upstream for app dev server (optional)
        set $app_upstream http://nirvana_app_dev:5174;

        # Real IP headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # API gateway to backend (with auth)
        location ^~ /api/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://nirvana_backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Static files from app (with auth)
        location /static/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Assets from app (with auth)
        location /assets/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # SPA content from app (with auth)
        location /spa/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Vite dev server internals for app (with auth)
        location ^~ /node_modules/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@vite {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@react-refresh {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Everything else to app (with auth)
        location / {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $app_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Block sensitive patterns
        location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|backup|backups|logs|tmp|uploads|keys|secrets) {
            access_log off;
            return 444;
        }

        location ~* \.php(\d+)?$ {
            access_log off;
            return 444;
        }
    }

    # Admin subdomain - admin.localhost (with auth)
    server {
        listen 80;
        server_name admin.localhost;

        # Dynamic upstream for admin dev server (optional)
        set $admin_upstream http://nirvana_admin_dev:5175;

        # Real IP headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # Export: Special handling for admin export functionality
        location = /export {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
        }
        location ^~ /export/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://nirvana_backend_upstream/api/export/;
            proxy_http_version 1.1;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header Host $host;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
            send_timeout 600s;
        }

        # API gateway to backend (with auth)
        location ^~ /api/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://nirvana_backend_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Static files from admin (with auth)
        location /static/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Assets from admin (with auth)
        location /assets/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # SPA content from admin (with auth)
        location /spa/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Vite dev server internals for admin (with auth)
        location ^~ /node_modules/ {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@vite {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location ^~ /@react-refresh {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Everything else to admin (with auth)
        location / {
            auth_basic "Restricted";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass $admin_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
            send_timeout 300s;
        }

        # Block sensitive patterns
        location ~* (\.env(\.[a-z]+)?|id_rsa(\.pub)?|credentials|Dockerfile|docker-compose\.ya?ml|\.git|\.svn|\.hg|terraform(\.tf(state|vars)?|/)|ansible(\.cfg|/)|pulumi|\.boto|\.ssh|\.docker|\.aws|\.azure|\.gcp|wp-admin|wp-content|wp-includes|vendor|backup|backups|logs|tmp|uploads|keys|secrets) {
            access_log off;
            return 444;
        }

        location ~* \.php(\d+)?$ {
            access_log off;
            return 444;
        }
    }
}